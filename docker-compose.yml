version: '3'
services:
  api:
    build:
      context: .
      dockerfile: Dockerfile.local
    ports:
      - '8080:8080'
    networks:
      - localdev
    volumes:
      - './:/app'
    environment:
      - ENVIRONMENT=development
      - AWS_ACCESS_KEY_ID=local
      - AWS_SECRET_ACCESS_KEY=local
      - AWS_REGION=us-east-1
    command: ["./mvnw", "spring-boot:run"]
    depends_on:
      - dynamodb
      - localkms
      - memcached

  test:
    build:
      context: .
      dockerfile: Dockerfile.local
    ports:
      - '8080:8080'
    networks:
      - localdev
    volumes:
      - './:/app'
    environment:
      - ENVIRONMENT=local-test
      - AWS_ACCESS_KEY_ID=local
      - AWS_SECRET_ACCESS_KEY=local
      - AWS_REGION=us-east-1
    command: ["./mvnw", "clean", "test"]
    depends_on:
      - dynamodb
      - localkms
      - memcached

  memcached:
    image: memcached
    ports:
      - '11211:11211'
    networks:
      - localdev
  
  localkms:
    image: nsmithuk/local-kms
    ports:
      - '4599:8080'
    volumes:
      - ./init:/init
    networks:
      - localdev
    environment:
      - AWS_ACCESS_KEY_ID='local'
      - AWS_SECRET_ACCESS_KEY='local'
      - AWS_REGION='us-east-1'
      - KMS_ACCOUNT_ID='111122223333'
      - KMS_REGION='us-east-1'
      - KMS_SEED_PATH=init/seed.yaml
  
  dynamodb:
    image: amazon/dynamodb-local:latest
    ports:
      - '8000:8000'
    networks:
      - localdev
    volumes:
     - "./docker/dynamodb:/home/dynamodblocal/data"
    working_dir: /home/dynamodblocal
    command: '-jar DynamoDBLocal.jar -sharedDb -dbPath ./data'

networks:
  localdev:
    driver: bridge