package com.salessparrow.api.domain;

import java.util.Date;

import com.amazonaws.services.dynamodbv2.datamodeling.*;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;

@Data
@AllArgsConstructor
@NoArgsConstructor
@DynamoDBTable(tableName = "salesforce_oauth_tokens")
public class SalesforceOauthToken {

  public enum Status {
    ACTIVE(1),
    DELETED(2);

    private final int value;

    Status(int value) {
      this.value = value;
    }

    public int getValue() {
      return value;
    }
  }

  @DynamoDBHashKey(attributeName = "id")
  @DynamoDBAutoGeneratedKey
  private String id;

  @DynamoDBAttribute(attributeName = "salesforce_user_id")
  private String salesforceUserId;

  @DynamoDBAttribute(attributeName = "identity_url")
  private String identityUrl;

  @DynamoDBAttribute(attributeName = "access_token")
  private String accessToken;

  @DynamoDBAttribute(attributeName = "refresh_token")
  private String refreshToken;

  @DynamoDBAttribute(attributeName = "signature")
  private String signature;

  @DynamoDBAttribute(attributeName = "id_token")
  private String idToken;

  @DynamoDBAttribute(attributeName = "instance_url")
  private String instanceUrl;

  @DynamoDBTypeConverted(converter = StatusEnumConverter.class)
  @DynamoDBAttribute(attributeName = "status")
  private Status status;

  @DynamoDBAttribute(attributeName = "issued_at")
  private Long issuedAt;

  @DynamoDBAutoGeneratedTimestamp(strategy = DynamoDBAutoGenerateStrategy.CREATE)
  @DynamoDBAttribute(attributeName = "created_at")
  private Date createdAt;

  @DynamoDBAutoGeneratedTimestamp(strategy = DynamoDBAutoGenerateStrategy.ALWAYS)
  @DynamoDBAttribute(attributeName = "updated_at")
  private Date updatedAt;

  /**
   * Converts Status enum to Integer and vice versa.
   */
  public static class StatusEnumConverter implements DynamoDBTypeConverter<Integer, Status> {
    @Override
    public Integer convert(Status status) {
      return status.ordinal();
    }

    @Override
    public Status unconvert(Integer value) {
      return Status.values()[value];
    }
  }
}
